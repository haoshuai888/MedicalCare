package com.medicalcare.user.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class HospExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table hosp
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table hosp
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table hosp
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hosp
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public HospExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hosp
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hosp
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hosp
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hosp
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hosp
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hosp
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hosp
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hosp
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hosp
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hosp
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table hosp
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andHospidIsNull() {
            addCriterion("hospId is null");
            return (Criteria) this;
        }

        public Criteria andHospidIsNotNull() {
            addCriterion("hospId is not null");
            return (Criteria) this;
        }

        public Criteria andHospidEqualTo(Integer value) {
            addCriterion("hospId =", value, "hospid");
            return (Criteria) this;
        }

        public Criteria andHospidNotEqualTo(Integer value) {
            addCriterion("hospId <>", value, "hospid");
            return (Criteria) this;
        }

        public Criteria andHospidGreaterThan(Integer value) {
            addCriterion("hospId >", value, "hospid");
            return (Criteria) this;
        }

        public Criteria andHospidGreaterThanOrEqualTo(Integer value) {
            addCriterion("hospId >=", value, "hospid");
            return (Criteria) this;
        }

        public Criteria andHospidLessThan(Integer value) {
            addCriterion("hospId <", value, "hospid");
            return (Criteria) this;
        }

        public Criteria andHospidLessThanOrEqualTo(Integer value) {
            addCriterion("hospId <=", value, "hospid");
            return (Criteria) this;
        }

        public Criteria andHospidIn(List<Integer> values) {
            addCriterion("hospId in", values, "hospid");
            return (Criteria) this;
        }

        public Criteria andHospidNotIn(List<Integer> values) {
            addCriterion("hospId not in", values, "hospid");
            return (Criteria) this;
        }

        public Criteria andHospidBetween(Integer value1, Integer value2) {
            addCriterion("hospId between", value1, value2, "hospid");
            return (Criteria) this;
        }

        public Criteria andHospidNotBetween(Integer value1, Integer value2) {
            addCriterion("hospId not between", value1, value2, "hospid");
            return (Criteria) this;
        }

        public Criteria andHospnameIsNull() {
            addCriterion("hospName is null");
            return (Criteria) this;
        }

        public Criteria andHospnameIsNotNull() {
            addCriterion("hospName is not null");
            return (Criteria) this;
        }

        public Criteria andHospnameEqualTo(String value) {
            addCriterion("hospName =", value, "hospname");
            return (Criteria) this;
        }

        public Criteria andHospnameNotEqualTo(String value) {
            addCriterion("hospName <>", value, "hospname");
            return (Criteria) this;
        }

        public Criteria andHospnameGreaterThan(String value) {
            addCriterion("hospName >", value, "hospname");
            return (Criteria) this;
        }

        public Criteria andHospnameGreaterThanOrEqualTo(String value) {
            addCriterion("hospName >=", value, "hospname");
            return (Criteria) this;
        }

        public Criteria andHospnameLessThan(String value) {
            addCriterion("hospName <", value, "hospname");
            return (Criteria) this;
        }

        public Criteria andHospnameLessThanOrEqualTo(String value) {
            addCriterion("hospName <=", value, "hospname");
            return (Criteria) this;
        }

        public Criteria andHospnameLike(String value) {
            addCriterion("hospName like", value, "hospname");
            return (Criteria) this;
        }

        public Criteria andHospnameNotLike(String value) {
            addCriterion("hospName not like", value, "hospname");
            return (Criteria) this;
        }

        public Criteria andHospnameIn(List<String> values) {
            addCriterion("hospName in", values, "hospname");
            return (Criteria) this;
        }

        public Criteria andHospnameNotIn(List<String> values) {
            addCriterion("hospName not in", values, "hospname");
            return (Criteria) this;
        }

        public Criteria andHospnameBetween(String value1, String value2) {
            addCriterion("hospName between", value1, value2, "hospname");
            return (Criteria) this;
        }

        public Criteria andHospnameNotBetween(String value1, String value2) {
            addCriterion("hospName not between", value1, value2, "hospname");
            return (Criteria) this;
        }

        public Criteria andDeparementidIsNull() {
            addCriterion("deparementId is null");
            return (Criteria) this;
        }

        public Criteria andDeparementidIsNotNull() {
            addCriterion("deparementId is not null");
            return (Criteria) this;
        }

        public Criteria andDeparementidEqualTo(Integer value) {
            addCriterion("deparementId =", value, "deparementid");
            return (Criteria) this;
        }

        public Criteria andDeparementidNotEqualTo(Integer value) {
            addCriterion("deparementId <>", value, "deparementid");
            return (Criteria) this;
        }

        public Criteria andDeparementidGreaterThan(Integer value) {
            addCriterion("deparementId >", value, "deparementid");
            return (Criteria) this;
        }

        public Criteria andDeparementidGreaterThanOrEqualTo(Integer value) {
            addCriterion("deparementId >=", value, "deparementid");
            return (Criteria) this;
        }

        public Criteria andDeparementidLessThan(Integer value) {
            addCriterion("deparementId <", value, "deparementid");
            return (Criteria) this;
        }

        public Criteria andDeparementidLessThanOrEqualTo(Integer value) {
            addCriterion("deparementId <=", value, "deparementid");
            return (Criteria) this;
        }

        public Criteria andDeparementidIn(List<Integer> values) {
            addCriterion("deparementId in", values, "deparementid");
            return (Criteria) this;
        }

        public Criteria andDeparementidNotIn(List<Integer> values) {
            addCriterion("deparementId not in", values, "deparementid");
            return (Criteria) this;
        }

        public Criteria andDeparementidBetween(Integer value1, Integer value2) {
            addCriterion("deparementId between", value1, value2, "deparementid");
            return (Criteria) this;
        }

        public Criteria andDeparementidNotBetween(Integer value1, Integer value2) {
            addCriterion("deparementId not between", value1, value2, "deparementid");
            return (Criteria) this;
        }

        public Criteria andSickroomIsNull() {
            addCriterion("sickRoom is null");
            return (Criteria) this;
        }

        public Criteria andSickroomIsNotNull() {
            addCriterion("sickRoom is not null");
            return (Criteria) this;
        }

        public Criteria andSickroomEqualTo(String value) {
            addCriterion("sickRoom =", value, "sickroom");
            return (Criteria) this;
        }

        public Criteria andSickroomNotEqualTo(String value) {
            addCriterion("sickRoom <>", value, "sickroom");
            return (Criteria) this;
        }

        public Criteria andSickroomGreaterThan(String value) {
            addCriterion("sickRoom >", value, "sickroom");
            return (Criteria) this;
        }

        public Criteria andSickroomGreaterThanOrEqualTo(String value) {
            addCriterion("sickRoom >=", value, "sickroom");
            return (Criteria) this;
        }

        public Criteria andSickroomLessThan(String value) {
            addCriterion("sickRoom <", value, "sickroom");
            return (Criteria) this;
        }

        public Criteria andSickroomLessThanOrEqualTo(String value) {
            addCriterion("sickRoom <=", value, "sickroom");
            return (Criteria) this;
        }

        public Criteria andSickroomLike(String value) {
            addCriterion("sickRoom like", value, "sickroom");
            return (Criteria) this;
        }

        public Criteria andSickroomNotLike(String value) {
            addCriterion("sickRoom not like", value, "sickroom");
            return (Criteria) this;
        }

        public Criteria andSickroomIn(List<String> values) {
            addCriterion("sickRoom in", values, "sickroom");
            return (Criteria) this;
        }

        public Criteria andSickroomNotIn(List<String> values) {
            addCriterion("sickRoom not in", values, "sickroom");
            return (Criteria) this;
        }

        public Criteria andSickroomBetween(String value1, String value2) {
            addCriterion("sickRoom between", value1, value2, "sickroom");
            return (Criteria) this;
        }

        public Criteria andSickroomNotBetween(String value1, String value2) {
            addCriterion("sickRoom not between", value1, value2, "sickroom");
            return (Criteria) this;
        }

        public Criteria andHospnumberIsNull() {
            addCriterion("hospNumber is null");
            return (Criteria) this;
        }

        public Criteria andHospnumberIsNotNull() {
            addCriterion("hospNumber is not null");
            return (Criteria) this;
        }

        public Criteria andHospnumberEqualTo(String value) {
            addCriterion("hospNumber =", value, "hospnumber");
            return (Criteria) this;
        }

        public Criteria andHospnumberNotEqualTo(String value) {
            addCriterion("hospNumber <>", value, "hospnumber");
            return (Criteria) this;
        }

        public Criteria andHospnumberGreaterThan(String value) {
            addCriterion("hospNumber >", value, "hospnumber");
            return (Criteria) this;
        }

        public Criteria andHospnumberGreaterThanOrEqualTo(String value) {
            addCriterion("hospNumber >=", value, "hospnumber");
            return (Criteria) this;
        }

        public Criteria andHospnumberLessThan(String value) {
            addCriterion("hospNumber <", value, "hospnumber");
            return (Criteria) this;
        }

        public Criteria andHospnumberLessThanOrEqualTo(String value) {
            addCriterion("hospNumber <=", value, "hospnumber");
            return (Criteria) this;
        }

        public Criteria andHospnumberLike(String value) {
            addCriterion("hospNumber like", value, "hospnumber");
            return (Criteria) this;
        }

        public Criteria andHospnumberNotLike(String value) {
            addCriterion("hospNumber not like", value, "hospnumber");
            return (Criteria) this;
        }

        public Criteria andHospnumberIn(List<String> values) {
            addCriterion("hospNumber in", values, "hospnumber");
            return (Criteria) this;
        }

        public Criteria andHospnumberNotIn(List<String> values) {
            addCriterion("hospNumber not in", values, "hospnumber");
            return (Criteria) this;
        }

        public Criteria andHospnumberBetween(String value1, String value2) {
            addCriterion("hospNumber between", value1, value2, "hospnumber");
            return (Criteria) this;
        }

        public Criteria andHospnumberNotBetween(String value1, String value2) {
            addCriterion("hospNumber not between", value1, value2, "hospnumber");
            return (Criteria) this;
        }

        public Criteria andHospstarttimeIsNull() {
            addCriterion("hospStartTime is null");
            return (Criteria) this;
        }

        public Criteria andHospstarttimeIsNotNull() {
            addCriterion("hospStartTime is not null");
            return (Criteria) this;
        }

        public Criteria andHospstarttimeEqualTo(Date value) {
            addCriterionForJDBCDate("hospStartTime =", value, "hospstarttime");
            return (Criteria) this;
        }

        public Criteria andHospstarttimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("hospStartTime <>", value, "hospstarttime");
            return (Criteria) this;
        }

        public Criteria andHospstarttimeGreaterThan(Date value) {
            addCriterionForJDBCDate("hospStartTime >", value, "hospstarttime");
            return (Criteria) this;
        }

        public Criteria andHospstarttimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("hospStartTime >=", value, "hospstarttime");
            return (Criteria) this;
        }

        public Criteria andHospstarttimeLessThan(Date value) {
            addCriterionForJDBCDate("hospStartTime <", value, "hospstarttime");
            return (Criteria) this;
        }

        public Criteria andHospstarttimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("hospStartTime <=", value, "hospstarttime");
            return (Criteria) this;
        }

        public Criteria andHospstarttimeIn(List<Date> values) {
            addCriterionForJDBCDate("hospStartTime in", values, "hospstarttime");
            return (Criteria) this;
        }

        public Criteria andHospstarttimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("hospStartTime not in", values, "hospstarttime");
            return (Criteria) this;
        }

        public Criteria andHospstarttimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("hospStartTime between", value1, value2, "hospstarttime");
            return (Criteria) this;
        }

        public Criteria andHospstarttimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("hospStartTime not between", value1, value2, "hospstarttime");
            return (Criteria) this;
        }

        public Criteria andHospendtimeIsNull() {
            addCriterion("hospEndTime is null");
            return (Criteria) this;
        }

        public Criteria andHospendtimeIsNotNull() {
            addCriterion("hospEndTime is not null");
            return (Criteria) this;
        }

        public Criteria andHospendtimeEqualTo(Date value) {
            addCriterionForJDBCDate("hospEndTime =", value, "hospendtime");
            return (Criteria) this;
        }

        public Criteria andHospendtimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("hospEndTime <>", value, "hospendtime");
            return (Criteria) this;
        }

        public Criteria andHospendtimeGreaterThan(Date value) {
            addCriterionForJDBCDate("hospEndTime >", value, "hospendtime");
            return (Criteria) this;
        }

        public Criteria andHospendtimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("hospEndTime >=", value, "hospendtime");
            return (Criteria) this;
        }

        public Criteria andHospendtimeLessThan(Date value) {
            addCriterionForJDBCDate("hospEndTime <", value, "hospendtime");
            return (Criteria) this;
        }

        public Criteria andHospendtimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("hospEndTime <=", value, "hospendtime");
            return (Criteria) this;
        }

        public Criteria andHospendtimeIn(List<Date> values) {
            addCriterionForJDBCDate("hospEndTime in", values, "hospendtime");
            return (Criteria) this;
        }

        public Criteria andHospendtimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("hospEndTime not in", values, "hospendtime");
            return (Criteria) this;
        }

        public Criteria andHospendtimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("hospEndTime between", value1, value2, "hospendtime");
            return (Criteria) this;
        }

        public Criteria andHospendtimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("hospEndTime not between", value1, value2, "hospendtime");
            return (Criteria) this;
        }

        public Criteria andLeavehospIsNull() {
            addCriterion("leaveHosp is null");
            return (Criteria) this;
        }

        public Criteria andLeavehospIsNotNull() {
            addCriterion("leaveHosp is not null");
            return (Criteria) this;
        }

        public Criteria andLeavehospEqualTo(Byte value) {
            addCriterion("leaveHosp =", value, "leavehosp");
            return (Criteria) this;
        }

        public Criteria andLeavehospNotEqualTo(Byte value) {
            addCriterion("leaveHosp <>", value, "leavehosp");
            return (Criteria) this;
        }

        public Criteria andLeavehospGreaterThan(Byte value) {
            addCriterion("leaveHosp >", value, "leavehosp");
            return (Criteria) this;
        }

        public Criteria andLeavehospGreaterThanOrEqualTo(Byte value) {
            addCriterion("leaveHosp >=", value, "leavehosp");
            return (Criteria) this;
        }

        public Criteria andLeavehospLessThan(Byte value) {
            addCriterion("leaveHosp <", value, "leavehosp");
            return (Criteria) this;
        }

        public Criteria andLeavehospLessThanOrEqualTo(Byte value) {
            addCriterion("leaveHosp <=", value, "leavehosp");
            return (Criteria) this;
        }

        public Criteria andLeavehospIn(List<Byte> values) {
            addCriterion("leaveHosp in", values, "leavehosp");
            return (Criteria) this;
        }

        public Criteria andLeavehospNotIn(List<Byte> values) {
            addCriterion("leaveHosp not in", values, "leavehosp");
            return (Criteria) this;
        }

        public Criteria andLeavehospBetween(Byte value1, Byte value2) {
            addCriterion("leaveHosp between", value1, value2, "leavehosp");
            return (Criteria) this;
        }

        public Criteria andLeavehospNotBetween(Byte value1, Byte value2) {
            addCriterion("leaveHosp not between", value1, value2, "leavehosp");
            return (Criteria) this;
        }

        public Criteria andHospdescribeIsNull() {
            addCriterion("hospDescribe is null");
            return (Criteria) this;
        }

        public Criteria andHospdescribeIsNotNull() {
            addCriterion("hospDescribe is not null");
            return (Criteria) this;
        }

        public Criteria andHospdescribeEqualTo(String value) {
            addCriterion("hospDescribe =", value, "hospdescribe");
            return (Criteria) this;
        }

        public Criteria andHospdescribeNotEqualTo(String value) {
            addCriterion("hospDescribe <>", value, "hospdescribe");
            return (Criteria) this;
        }

        public Criteria andHospdescribeGreaterThan(String value) {
            addCriterion("hospDescribe >", value, "hospdescribe");
            return (Criteria) this;
        }

        public Criteria andHospdescribeGreaterThanOrEqualTo(String value) {
            addCriterion("hospDescribe >=", value, "hospdescribe");
            return (Criteria) this;
        }

        public Criteria andHospdescribeLessThan(String value) {
            addCriterion("hospDescribe <", value, "hospdescribe");
            return (Criteria) this;
        }

        public Criteria andHospdescribeLessThanOrEqualTo(String value) {
            addCriterion("hospDescribe <=", value, "hospdescribe");
            return (Criteria) this;
        }

        public Criteria andHospdescribeLike(String value) {
            addCriterion("hospDescribe like", value, "hospdescribe");
            return (Criteria) this;
        }

        public Criteria andHospdescribeNotLike(String value) {
            addCriterion("hospDescribe not like", value, "hospdescribe");
            return (Criteria) this;
        }

        public Criteria andHospdescribeIn(List<String> values) {
            addCriterion("hospDescribe in", values, "hospdescribe");
            return (Criteria) this;
        }

        public Criteria andHospdescribeNotIn(List<String> values) {
            addCriterion("hospDescribe not in", values, "hospdescribe");
            return (Criteria) this;
        }

        public Criteria andHospdescribeBetween(String value1, String value2) {
            addCriterion("hospDescribe between", value1, value2, "hospdescribe");
            return (Criteria) this;
        }

        public Criteria andHospdescribeNotBetween(String value1, String value2) {
            addCriterion("hospDescribe not between", value1, value2, "hospdescribe");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table hosp
     *
     * @mbggenerated do_not_delete_during_merge Fri Sep 14 20:40:09 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table hosp
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}