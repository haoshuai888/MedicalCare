package com.medicalcare.user.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ElderactionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table elderaction
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table elderaction
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table elderaction
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elderaction
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public ElderactionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elderaction
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elderaction
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elderaction
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elderaction
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elderaction
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elderaction
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elderaction
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elderaction
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elderaction
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elderaction
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table elderaction
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andActionidIsNull() {
            addCriterion("actionId is null");
            return (Criteria) this;
        }

        public Criteria andActionidIsNotNull() {
            addCriterion("actionId is not null");
            return (Criteria) this;
        }

        public Criteria andActionidEqualTo(Integer value) {
            addCriterion("actionId =", value, "actionid");
            return (Criteria) this;
        }

        public Criteria andActionidNotEqualTo(Integer value) {
            addCriterion("actionId <>", value, "actionid");
            return (Criteria) this;
        }

        public Criteria andActionidGreaterThan(Integer value) {
            addCriterion("actionId >", value, "actionid");
            return (Criteria) this;
        }

        public Criteria andActionidGreaterThanOrEqualTo(Integer value) {
            addCriterion("actionId >=", value, "actionid");
            return (Criteria) this;
        }

        public Criteria andActionidLessThan(Integer value) {
            addCriterion("actionId <", value, "actionid");
            return (Criteria) this;
        }

        public Criteria andActionidLessThanOrEqualTo(Integer value) {
            addCriterion("actionId <=", value, "actionid");
            return (Criteria) this;
        }

        public Criteria andActionidIn(List<Integer> values) {
            addCriterion("actionId in", values, "actionid");
            return (Criteria) this;
        }

        public Criteria andActionidNotIn(List<Integer> values) {
            addCriterion("actionId not in", values, "actionid");
            return (Criteria) this;
        }

        public Criteria andActionidBetween(Integer value1, Integer value2) {
            addCriterion("actionId between", value1, value2, "actionid");
            return (Criteria) this;
        }

        public Criteria andActionidNotBetween(Integer value1, Integer value2) {
            addCriterion("actionId not between", value1, value2, "actionid");
            return (Criteria) this;
        }

        public Criteria andActiontypeIsNull() {
            addCriterion("actionType is null");
            return (Criteria) this;
        }

        public Criteria andActiontypeIsNotNull() {
            addCriterion("actionType is not null");
            return (Criteria) this;
        }

        public Criteria andActiontypeEqualTo(String value) {
            addCriterion("actionType =", value, "actiontype");
            return (Criteria) this;
        }

        public Criteria andActiontypeNotEqualTo(String value) {
            addCriterion("actionType <>", value, "actiontype");
            return (Criteria) this;
        }

        public Criteria andActiontypeGreaterThan(String value) {
            addCriterion("actionType >", value, "actiontype");
            return (Criteria) this;
        }

        public Criteria andActiontypeGreaterThanOrEqualTo(String value) {
            addCriterion("actionType >=", value, "actiontype");
            return (Criteria) this;
        }

        public Criteria andActiontypeLessThan(String value) {
            addCriterion("actionType <", value, "actiontype");
            return (Criteria) this;
        }

        public Criteria andActiontypeLessThanOrEqualTo(String value) {
            addCriterion("actionType <=", value, "actiontype");
            return (Criteria) this;
        }

        public Criteria andActiontypeLike(String value) {
            addCriterion("actionType like", value, "actiontype");
            return (Criteria) this;
        }

        public Criteria andActiontypeNotLike(String value) {
            addCriterion("actionType not like", value, "actiontype");
            return (Criteria) this;
        }

        public Criteria andActiontypeIn(List<String> values) {
            addCriterion("actionType in", values, "actiontype");
            return (Criteria) this;
        }

        public Criteria andActiontypeNotIn(List<String> values) {
            addCriterion("actionType not in", values, "actiontype");
            return (Criteria) this;
        }

        public Criteria andActiontypeBetween(String value1, String value2) {
            addCriterion("actionType between", value1, value2, "actiontype");
            return (Criteria) this;
        }

        public Criteria andActiontypeNotBetween(String value1, String value2) {
            addCriterion("actionType not between", value1, value2, "actiontype");
            return (Criteria) this;
        }

        public Criteria andActionconsumeIsNull() {
            addCriterion("actionConsume is null");
            return (Criteria) this;
        }

        public Criteria andActionconsumeIsNotNull() {
            addCriterion("actionConsume is not null");
            return (Criteria) this;
        }

        public Criteria andActionconsumeEqualTo(String value) {
            addCriterion("actionConsume =", value, "actionconsume");
            return (Criteria) this;
        }

        public Criteria andActionconsumeNotEqualTo(String value) {
            addCriterion("actionConsume <>", value, "actionconsume");
            return (Criteria) this;
        }

        public Criteria andActionconsumeGreaterThan(String value) {
            addCriterion("actionConsume >", value, "actionconsume");
            return (Criteria) this;
        }

        public Criteria andActionconsumeGreaterThanOrEqualTo(String value) {
            addCriterion("actionConsume >=", value, "actionconsume");
            return (Criteria) this;
        }

        public Criteria andActionconsumeLessThan(String value) {
            addCriterion("actionConsume <", value, "actionconsume");
            return (Criteria) this;
        }

        public Criteria andActionconsumeLessThanOrEqualTo(String value) {
            addCriterion("actionConsume <=", value, "actionconsume");
            return (Criteria) this;
        }

        public Criteria andActionconsumeLike(String value) {
            addCriterion("actionConsume like", value, "actionconsume");
            return (Criteria) this;
        }

        public Criteria andActionconsumeNotLike(String value) {
            addCriterion("actionConsume not like", value, "actionconsume");
            return (Criteria) this;
        }

        public Criteria andActionconsumeIn(List<String> values) {
            addCriterion("actionConsume in", values, "actionconsume");
            return (Criteria) this;
        }

        public Criteria andActionconsumeNotIn(List<String> values) {
            addCriterion("actionConsume not in", values, "actionconsume");
            return (Criteria) this;
        }

        public Criteria andActionconsumeBetween(String value1, String value2) {
            addCriterion("actionConsume between", value1, value2, "actionconsume");
            return (Criteria) this;
        }

        public Criteria andActionconsumeNotBetween(String value1, String value2) {
            addCriterion("actionConsume not between", value1, value2, "actionconsume");
            return (Criteria) this;
        }

        public Criteria andActionstarttimeIsNull() {
            addCriterion("actionStartTime is null");
            return (Criteria) this;
        }

        public Criteria andActionstarttimeIsNotNull() {
            addCriterion("actionStartTime is not null");
            return (Criteria) this;
        }

        public Criteria andActionstarttimeEqualTo(Date value) {
            addCriterionForJDBCDate("actionStartTime =", value, "actionstarttime");
            return (Criteria) this;
        }

        public Criteria andActionstarttimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("actionStartTime <>", value, "actionstarttime");
            return (Criteria) this;
        }

        public Criteria andActionstarttimeGreaterThan(Date value) {
            addCriterionForJDBCDate("actionStartTime >", value, "actionstarttime");
            return (Criteria) this;
        }

        public Criteria andActionstarttimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("actionStartTime >=", value, "actionstarttime");
            return (Criteria) this;
        }

        public Criteria andActionstarttimeLessThan(Date value) {
            addCriterionForJDBCDate("actionStartTime <", value, "actionstarttime");
            return (Criteria) this;
        }

        public Criteria andActionstarttimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("actionStartTime <=", value, "actionstarttime");
            return (Criteria) this;
        }

        public Criteria andActionstarttimeIn(List<Date> values) {
            addCriterionForJDBCDate("actionStartTime in", values, "actionstarttime");
            return (Criteria) this;
        }

        public Criteria andActionstarttimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("actionStartTime not in", values, "actionstarttime");
            return (Criteria) this;
        }

        public Criteria andActionstarttimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("actionStartTime between", value1, value2, "actionstarttime");
            return (Criteria) this;
        }

        public Criteria andActionstarttimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("actionStartTime not between", value1, value2, "actionstarttime");
            return (Criteria) this;
        }

        public Criteria andActionendtimeIsNull() {
            addCriterion("actionEndTime is null");
            return (Criteria) this;
        }

        public Criteria andActionendtimeIsNotNull() {
            addCriterion("actionEndTime is not null");
            return (Criteria) this;
        }

        public Criteria andActionendtimeEqualTo(Date value) {
            addCriterionForJDBCDate("actionEndTime =", value, "actionendtime");
            return (Criteria) this;
        }

        public Criteria andActionendtimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("actionEndTime <>", value, "actionendtime");
            return (Criteria) this;
        }

        public Criteria andActionendtimeGreaterThan(Date value) {
            addCriterionForJDBCDate("actionEndTime >", value, "actionendtime");
            return (Criteria) this;
        }

        public Criteria andActionendtimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("actionEndTime >=", value, "actionendtime");
            return (Criteria) this;
        }

        public Criteria andActionendtimeLessThan(Date value) {
            addCriterionForJDBCDate("actionEndTime <", value, "actionendtime");
            return (Criteria) this;
        }

        public Criteria andActionendtimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("actionEndTime <=", value, "actionendtime");
            return (Criteria) this;
        }

        public Criteria andActionendtimeIn(List<Date> values) {
            addCriterionForJDBCDate("actionEndTime in", values, "actionendtime");
            return (Criteria) this;
        }

        public Criteria andActionendtimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("actionEndTime not in", values, "actionendtime");
            return (Criteria) this;
        }

        public Criteria andActionendtimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("actionEndTime between", value1, value2, "actionendtime");
            return (Criteria) this;
        }

        public Criteria andActionendtimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("actionEndTime not between", value1, value2, "actionendtime");
            return (Criteria) this;
        }

        public Criteria andActioncontentIsNull() {
            addCriterion("actionContent is null");
            return (Criteria) this;
        }

        public Criteria andActioncontentIsNotNull() {
            addCriterion("actionContent is not null");
            return (Criteria) this;
        }

        public Criteria andActioncontentEqualTo(String value) {
            addCriterion("actionContent =", value, "actioncontent");
            return (Criteria) this;
        }

        public Criteria andActioncontentNotEqualTo(String value) {
            addCriterion("actionContent <>", value, "actioncontent");
            return (Criteria) this;
        }

        public Criteria andActioncontentGreaterThan(String value) {
            addCriterion("actionContent >", value, "actioncontent");
            return (Criteria) this;
        }

        public Criteria andActioncontentGreaterThanOrEqualTo(String value) {
            addCriterion("actionContent >=", value, "actioncontent");
            return (Criteria) this;
        }

        public Criteria andActioncontentLessThan(String value) {
            addCriterion("actionContent <", value, "actioncontent");
            return (Criteria) this;
        }

        public Criteria andActioncontentLessThanOrEqualTo(String value) {
            addCriterion("actionContent <=", value, "actioncontent");
            return (Criteria) this;
        }

        public Criteria andActioncontentLike(String value) {
            addCriterion("actionContent like", value, "actioncontent");
            return (Criteria) this;
        }

        public Criteria andActioncontentNotLike(String value) {
            addCriterion("actionContent not like", value, "actioncontent");
            return (Criteria) this;
        }

        public Criteria andActioncontentIn(List<String> values) {
            addCriterion("actionContent in", values, "actioncontent");
            return (Criteria) this;
        }

        public Criteria andActioncontentNotIn(List<String> values) {
            addCriterion("actionContent not in", values, "actioncontent");
            return (Criteria) this;
        }

        public Criteria andActioncontentBetween(String value1, String value2) {
            addCriterion("actionContent between", value1, value2, "actioncontent");
            return (Criteria) this;
        }

        public Criteria andActioncontentNotBetween(String value1, String value2) {
            addCriterion("actionContent not between", value1, value2, "actioncontent");
            return (Criteria) this;
        }

        public Criteria andActiondescribeIsNull() {
            addCriterion("actionDescribe is null");
            return (Criteria) this;
        }

        public Criteria andActiondescribeIsNotNull() {
            addCriterion("actionDescribe is not null");
            return (Criteria) this;
        }

        public Criteria andActiondescribeEqualTo(String value) {
            addCriterion("actionDescribe =", value, "actiondescribe");
            return (Criteria) this;
        }

        public Criteria andActiondescribeNotEqualTo(String value) {
            addCriterion("actionDescribe <>", value, "actiondescribe");
            return (Criteria) this;
        }

        public Criteria andActiondescribeGreaterThan(String value) {
            addCriterion("actionDescribe >", value, "actiondescribe");
            return (Criteria) this;
        }

        public Criteria andActiondescribeGreaterThanOrEqualTo(String value) {
            addCriterion("actionDescribe >=", value, "actiondescribe");
            return (Criteria) this;
        }

        public Criteria andActiondescribeLessThan(String value) {
            addCriterion("actionDescribe <", value, "actiondescribe");
            return (Criteria) this;
        }

        public Criteria andActiondescribeLessThanOrEqualTo(String value) {
            addCriterion("actionDescribe <=", value, "actiondescribe");
            return (Criteria) this;
        }

        public Criteria andActiondescribeLike(String value) {
            addCriterion("actionDescribe like", value, "actiondescribe");
            return (Criteria) this;
        }

        public Criteria andActiondescribeNotLike(String value) {
            addCriterion("actionDescribe not like", value, "actiondescribe");
            return (Criteria) this;
        }

        public Criteria andActiondescribeIn(List<String> values) {
            addCriterion("actionDescribe in", values, "actiondescribe");
            return (Criteria) this;
        }

        public Criteria andActiondescribeNotIn(List<String> values) {
            addCriterion("actionDescribe not in", values, "actiondescribe");
            return (Criteria) this;
        }

        public Criteria andActiondescribeBetween(String value1, String value2) {
            addCriterion("actionDescribe between", value1, value2, "actiondescribe");
            return (Criteria) this;
        }

        public Criteria andActiondescribeNotBetween(String value1, String value2) {
            addCriterion("actionDescribe not between", value1, value2, "actiondescribe");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table elderaction
     *
     * @mbggenerated do_not_delete_during_merge Fri Sep 14 20:40:09 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table elderaction
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}