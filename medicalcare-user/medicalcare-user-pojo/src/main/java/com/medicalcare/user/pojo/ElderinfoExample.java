package com.medicalcare.user.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ElderinfoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table elderinfo
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table elderinfo
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table elderinfo
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elderinfo
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public ElderinfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elderinfo
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elderinfo
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elderinfo
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elderinfo
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elderinfo
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elderinfo
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elderinfo
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elderinfo
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elderinfo
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table elderinfo
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table elderinfo
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andElderidIsNull() {
            addCriterion("elderId is null");
            return (Criteria) this;
        }

        public Criteria andElderidIsNotNull() {
            addCriterion("elderId is not null");
            return (Criteria) this;
        }

        public Criteria andElderidEqualTo(Integer value) {
            addCriterion("elderId =", value, "elderid");
            return (Criteria) this;
        }

        public Criteria andElderidNotEqualTo(Integer value) {
            addCriterion("elderId <>", value, "elderid");
            return (Criteria) this;
        }

        public Criteria andElderidGreaterThan(Integer value) {
            addCriterion("elderId >", value, "elderid");
            return (Criteria) this;
        }

        public Criteria andElderidGreaterThanOrEqualTo(Integer value) {
            addCriterion("elderId >=", value, "elderid");
            return (Criteria) this;
        }

        public Criteria andElderidLessThan(Integer value) {
            addCriterion("elderId <", value, "elderid");
            return (Criteria) this;
        }

        public Criteria andElderidLessThanOrEqualTo(Integer value) {
            addCriterion("elderId <=", value, "elderid");
            return (Criteria) this;
        }

        public Criteria andElderidIn(List<Integer> values) {
            addCriterion("elderId in", values, "elderid");
            return (Criteria) this;
        }

        public Criteria andElderidNotIn(List<Integer> values) {
            addCriterion("elderId not in", values, "elderid");
            return (Criteria) this;
        }

        public Criteria andElderidBetween(Integer value1, Integer value2) {
            addCriterion("elderId between", value1, value2, "elderid");
            return (Criteria) this;
        }

        public Criteria andElderidNotBetween(Integer value1, Integer value2) {
            addCriterion("elderId not between", value1, value2, "elderid");
            return (Criteria) this;
        }

        public Criteria andEldernameIsNull() {
            addCriterion("elderName is null");
            return (Criteria) this;
        }

        public Criteria andEldernameIsNotNull() {
            addCriterion("elderName is not null");
            return (Criteria) this;
        }

        public Criteria andEldernameEqualTo(String value) {
            addCriterion("elderName =", value, "eldername");
            return (Criteria) this;
        }

        public Criteria andEldernameNotEqualTo(String value) {
            addCriterion("elderName <>", value, "eldername");
            return (Criteria) this;
        }

        public Criteria andEldernameGreaterThan(String value) {
            addCriterion("elderName >", value, "eldername");
            return (Criteria) this;
        }

        public Criteria andEldernameGreaterThanOrEqualTo(String value) {
            addCriterion("elderName >=", value, "eldername");
            return (Criteria) this;
        }

        public Criteria andEldernameLessThan(String value) {
            addCriterion("elderName <", value, "eldername");
            return (Criteria) this;
        }

        public Criteria andEldernameLessThanOrEqualTo(String value) {
            addCriterion("elderName <=", value, "eldername");
            return (Criteria) this;
        }

        public Criteria andEldernameLike(String value) {
            addCriterion("elderName like", value, "eldername");
            return (Criteria) this;
        }

        public Criteria andEldernameNotLike(String value) {
            addCriterion("elderName not like", value, "eldername");
            return (Criteria) this;
        }

        public Criteria andEldernameIn(List<String> values) {
            addCriterion("elderName in", values, "eldername");
            return (Criteria) this;
        }

        public Criteria andEldernameNotIn(List<String> values) {
            addCriterion("elderName not in", values, "eldername");
            return (Criteria) this;
        }

        public Criteria andEldernameBetween(String value1, String value2) {
            addCriterion("elderName between", value1, value2, "eldername");
            return (Criteria) this;
        }

        public Criteria andEldernameNotBetween(String value1, String value2) {
            addCriterion("elderName not between", value1, value2, "eldername");
            return (Criteria) this;
        }

        public Criteria andElderaddressIsNull() {
            addCriterion("elderAddress is null");
            return (Criteria) this;
        }

        public Criteria andElderaddressIsNotNull() {
            addCriterion("elderAddress is not null");
            return (Criteria) this;
        }

        public Criteria andElderaddressEqualTo(String value) {
            addCriterion("elderAddress =", value, "elderaddress");
            return (Criteria) this;
        }

        public Criteria andElderaddressNotEqualTo(String value) {
            addCriterion("elderAddress <>", value, "elderaddress");
            return (Criteria) this;
        }

        public Criteria andElderaddressGreaterThan(String value) {
            addCriterion("elderAddress >", value, "elderaddress");
            return (Criteria) this;
        }

        public Criteria andElderaddressGreaterThanOrEqualTo(String value) {
            addCriterion("elderAddress >=", value, "elderaddress");
            return (Criteria) this;
        }

        public Criteria andElderaddressLessThan(String value) {
            addCriterion("elderAddress <", value, "elderaddress");
            return (Criteria) this;
        }

        public Criteria andElderaddressLessThanOrEqualTo(String value) {
            addCriterion("elderAddress <=", value, "elderaddress");
            return (Criteria) this;
        }

        public Criteria andElderaddressLike(String value) {
            addCriterion("elderAddress like", value, "elderaddress");
            return (Criteria) this;
        }

        public Criteria andElderaddressNotLike(String value) {
            addCriterion("elderAddress not like", value, "elderaddress");
            return (Criteria) this;
        }

        public Criteria andElderaddressIn(List<String> values) {
            addCriterion("elderAddress in", values, "elderaddress");
            return (Criteria) this;
        }

        public Criteria andElderaddressNotIn(List<String> values) {
            addCriterion("elderAddress not in", values, "elderaddress");
            return (Criteria) this;
        }

        public Criteria andElderaddressBetween(String value1, String value2) {
            addCriterion("elderAddress between", value1, value2, "elderaddress");
            return (Criteria) this;
        }

        public Criteria andElderaddressNotBetween(String value1, String value2) {
            addCriterion("elderAddress not between", value1, value2, "elderaddress");
            return (Criteria) this;
        }

        public Criteria andEldersexIsNull() {
            addCriterion("elderSex is null");
            return (Criteria) this;
        }

        public Criteria andEldersexIsNotNull() {
            addCriterion("elderSex is not null");
            return (Criteria) this;
        }

        public Criteria andEldersexEqualTo(Integer value) {
            addCriterion("elderSex =", value, "eldersex");
            return (Criteria) this;
        }

        public Criteria andEldersexNotEqualTo(Integer value) {
            addCriterion("elderSex <>", value, "eldersex");
            return (Criteria) this;
        }

        public Criteria andEldersexGreaterThan(Integer value) {
            addCriterion("elderSex >", value, "eldersex");
            return (Criteria) this;
        }

        public Criteria andEldersexGreaterThanOrEqualTo(Integer value) {
            addCriterion("elderSex >=", value, "eldersex");
            return (Criteria) this;
        }

        public Criteria andEldersexLessThan(Integer value) {
            addCriterion("elderSex <", value, "eldersex");
            return (Criteria) this;
        }

        public Criteria andEldersexLessThanOrEqualTo(Integer value) {
            addCriterion("elderSex <=", value, "eldersex");
            return (Criteria) this;
        }

        public Criteria andEldersexIn(List<Integer> values) {
            addCriterion("elderSex in", values, "eldersex");
            return (Criteria) this;
        }

        public Criteria andEldersexNotIn(List<Integer> values) {
            addCriterion("elderSex not in", values, "eldersex");
            return (Criteria) this;
        }

        public Criteria andEldersexBetween(Integer value1, Integer value2) {
            addCriterion("elderSex between", value1, value2, "eldersex");
            return (Criteria) this;
        }

        public Criteria andEldersexNotBetween(Integer value1, Integer value2) {
            addCriterion("elderSex not between", value1, value2, "eldersex");
            return (Criteria) this;
        }

        public Criteria andElderbirthIsNull() {
            addCriterion("elderBirth is null");
            return (Criteria) this;
        }

        public Criteria andElderbirthIsNotNull() {
            addCriterion("elderBirth is not null");
            return (Criteria) this;
        }

        public Criteria andElderbirthEqualTo(Date value) {
            addCriterionForJDBCDate("elderBirth =", value, "elderbirth");
            return (Criteria) this;
        }

        public Criteria andElderbirthNotEqualTo(Date value) {
            addCriterionForJDBCDate("elderBirth <>", value, "elderbirth");
            return (Criteria) this;
        }

        public Criteria andElderbirthGreaterThan(Date value) {
            addCriterionForJDBCDate("elderBirth >", value, "elderbirth");
            return (Criteria) this;
        }

        public Criteria andElderbirthGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("elderBirth >=", value, "elderbirth");
            return (Criteria) this;
        }

        public Criteria andElderbirthLessThan(Date value) {
            addCriterionForJDBCDate("elderBirth <", value, "elderbirth");
            return (Criteria) this;
        }

        public Criteria andElderbirthLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("elderBirth <=", value, "elderbirth");
            return (Criteria) this;
        }

        public Criteria andElderbirthIn(List<Date> values) {
            addCriterionForJDBCDate("elderBirth in", values, "elderbirth");
            return (Criteria) this;
        }

        public Criteria andElderbirthNotIn(List<Date> values) {
            addCriterionForJDBCDate("elderBirth not in", values, "elderbirth");
            return (Criteria) this;
        }

        public Criteria andElderbirthBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("elderBirth between", value1, value2, "elderbirth");
            return (Criteria) this;
        }

        public Criteria andElderbirthNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("elderBirth not between", value1, value2, "elderbirth");
            return (Criteria) this;
        }

        public Criteria andElderageIsNull() {
            addCriterion("elderAge is null");
            return (Criteria) this;
        }

        public Criteria andElderageIsNotNull() {
            addCriterion("elderAge is not null");
            return (Criteria) this;
        }

        public Criteria andElderageEqualTo(Integer value) {
            addCriterion("elderAge =", value, "elderage");
            return (Criteria) this;
        }

        public Criteria andElderageNotEqualTo(Integer value) {
            addCriterion("elderAge <>", value, "elderage");
            return (Criteria) this;
        }

        public Criteria andElderageGreaterThan(Integer value) {
            addCriterion("elderAge >", value, "elderage");
            return (Criteria) this;
        }

        public Criteria andElderageGreaterThanOrEqualTo(Integer value) {
            addCriterion("elderAge >=", value, "elderage");
            return (Criteria) this;
        }

        public Criteria andElderageLessThan(Integer value) {
            addCriterion("elderAge <", value, "elderage");
            return (Criteria) this;
        }

        public Criteria andElderageLessThanOrEqualTo(Integer value) {
            addCriterion("elderAge <=", value, "elderage");
            return (Criteria) this;
        }

        public Criteria andElderageIn(List<Integer> values) {
            addCriterion("elderAge in", values, "elderage");
            return (Criteria) this;
        }

        public Criteria andElderageNotIn(List<Integer> values) {
            addCriterion("elderAge not in", values, "elderage");
            return (Criteria) this;
        }

        public Criteria andElderageBetween(Integer value1, Integer value2) {
            addCriterion("elderAge between", value1, value2, "elderage");
            return (Criteria) this;
        }

        public Criteria andElderageNotBetween(Integer value1, Integer value2) {
            addCriterion("elderAge not between", value1, value2, "elderage");
            return (Criteria) this;
        }

        public Criteria andEldernationIsNull() {
            addCriterion("elderNation is null");
            return (Criteria) this;
        }

        public Criteria andEldernationIsNotNull() {
            addCriterion("elderNation is not null");
            return (Criteria) this;
        }

        public Criteria andEldernationEqualTo(String value) {
            addCriterion("elderNation =", value, "eldernation");
            return (Criteria) this;
        }

        public Criteria andEldernationNotEqualTo(String value) {
            addCriterion("elderNation <>", value, "eldernation");
            return (Criteria) this;
        }

        public Criteria andEldernationGreaterThan(String value) {
            addCriterion("elderNation >", value, "eldernation");
            return (Criteria) this;
        }

        public Criteria andEldernationGreaterThanOrEqualTo(String value) {
            addCriterion("elderNation >=", value, "eldernation");
            return (Criteria) this;
        }

        public Criteria andEldernationLessThan(String value) {
            addCriterion("elderNation <", value, "eldernation");
            return (Criteria) this;
        }

        public Criteria andEldernationLessThanOrEqualTo(String value) {
            addCriterion("elderNation <=", value, "eldernation");
            return (Criteria) this;
        }

        public Criteria andEldernationLike(String value) {
            addCriterion("elderNation like", value, "eldernation");
            return (Criteria) this;
        }

        public Criteria andEldernationNotLike(String value) {
            addCriterion("elderNation not like", value, "eldernation");
            return (Criteria) this;
        }

        public Criteria andEldernationIn(List<String> values) {
            addCriterion("elderNation in", values, "eldernation");
            return (Criteria) this;
        }

        public Criteria andEldernationNotIn(List<String> values) {
            addCriterion("elderNation not in", values, "eldernation");
            return (Criteria) this;
        }

        public Criteria andEldernationBetween(String value1, String value2) {
            addCriterion("elderNation between", value1, value2, "eldernation");
            return (Criteria) this;
        }

        public Criteria andEldernationNotBetween(String value1, String value2) {
            addCriterion("elderNation not between", value1, value2, "eldernation");
            return (Criteria) this;
        }

        public Criteria andElderidnumberIsNull() {
            addCriterion("elderIdNumber is null");
            return (Criteria) this;
        }

        public Criteria andElderidnumberIsNotNull() {
            addCriterion("elderIdNumber is not null");
            return (Criteria) this;
        }

        public Criteria andElderidnumberEqualTo(Integer value) {
            addCriterion("elderIdNumber =", value, "elderidnumber");
            return (Criteria) this;
        }

        public Criteria andElderidnumberNotEqualTo(Integer value) {
            addCriterion("elderIdNumber <>", value, "elderidnumber");
            return (Criteria) this;
        }

        public Criteria andElderidnumberGreaterThan(Integer value) {
            addCriterion("elderIdNumber >", value, "elderidnumber");
            return (Criteria) this;
        }

        public Criteria andElderidnumberGreaterThanOrEqualTo(Integer value) {
            addCriterion("elderIdNumber >=", value, "elderidnumber");
            return (Criteria) this;
        }

        public Criteria andElderidnumberLessThan(Integer value) {
            addCriterion("elderIdNumber <", value, "elderidnumber");
            return (Criteria) this;
        }

        public Criteria andElderidnumberLessThanOrEqualTo(Integer value) {
            addCriterion("elderIdNumber <=", value, "elderidnumber");
            return (Criteria) this;
        }

        public Criteria andElderidnumberIn(List<Integer> values) {
            addCriterion("elderIdNumber in", values, "elderidnumber");
            return (Criteria) this;
        }

        public Criteria andElderidnumberNotIn(List<Integer> values) {
            addCriterion("elderIdNumber not in", values, "elderidnumber");
            return (Criteria) this;
        }

        public Criteria andElderidnumberBetween(Integer value1, Integer value2) {
            addCriterion("elderIdNumber between", value1, value2, "elderidnumber");
            return (Criteria) this;
        }

        public Criteria andElderidnumberNotBetween(Integer value1, Integer value2) {
            addCriterion("elderIdNumber not between", value1, value2, "elderidnumber");
            return (Criteria) this;
        }

        public Criteria andElderemailIsNull() {
            addCriterion("elderEmail is null");
            return (Criteria) this;
        }

        public Criteria andElderemailIsNotNull() {
            addCriterion("elderEmail is not null");
            return (Criteria) this;
        }

        public Criteria andElderemailEqualTo(String value) {
            addCriterion("elderEmail =", value, "elderemail");
            return (Criteria) this;
        }

        public Criteria andElderemailNotEqualTo(String value) {
            addCriterion("elderEmail <>", value, "elderemail");
            return (Criteria) this;
        }

        public Criteria andElderemailGreaterThan(String value) {
            addCriterion("elderEmail >", value, "elderemail");
            return (Criteria) this;
        }

        public Criteria andElderemailGreaterThanOrEqualTo(String value) {
            addCriterion("elderEmail >=", value, "elderemail");
            return (Criteria) this;
        }

        public Criteria andElderemailLessThan(String value) {
            addCriterion("elderEmail <", value, "elderemail");
            return (Criteria) this;
        }

        public Criteria andElderemailLessThanOrEqualTo(String value) {
            addCriterion("elderEmail <=", value, "elderemail");
            return (Criteria) this;
        }

        public Criteria andElderemailLike(String value) {
            addCriterion("elderEmail like", value, "elderemail");
            return (Criteria) this;
        }

        public Criteria andElderemailNotLike(String value) {
            addCriterion("elderEmail not like", value, "elderemail");
            return (Criteria) this;
        }

        public Criteria andElderemailIn(List<String> values) {
            addCriterion("elderEmail in", values, "elderemail");
            return (Criteria) this;
        }

        public Criteria andElderemailNotIn(List<String> values) {
            addCriterion("elderEmail not in", values, "elderemail");
            return (Criteria) this;
        }

        public Criteria andElderemailBetween(String value1, String value2) {
            addCriterion("elderEmail between", value1, value2, "elderemail");
            return (Criteria) this;
        }

        public Criteria andElderemailNotBetween(String value1, String value2) {
            addCriterion("elderEmail not between", value1, value2, "elderemail");
            return (Criteria) this;
        }

        public Criteria andElderphotoIsNull() {
            addCriterion("elderPhoto is null");
            return (Criteria) this;
        }

        public Criteria andElderphotoIsNotNull() {
            addCriterion("elderPhoto is not null");
            return (Criteria) this;
        }

        public Criteria andElderphotoEqualTo(String value) {
            addCriterion("elderPhoto =", value, "elderphoto");
            return (Criteria) this;
        }

        public Criteria andElderphotoNotEqualTo(String value) {
            addCriterion("elderPhoto <>", value, "elderphoto");
            return (Criteria) this;
        }

        public Criteria andElderphotoGreaterThan(String value) {
            addCriterion("elderPhoto >", value, "elderphoto");
            return (Criteria) this;
        }

        public Criteria andElderphotoGreaterThanOrEqualTo(String value) {
            addCriterion("elderPhoto >=", value, "elderphoto");
            return (Criteria) this;
        }

        public Criteria andElderphotoLessThan(String value) {
            addCriterion("elderPhoto <", value, "elderphoto");
            return (Criteria) this;
        }

        public Criteria andElderphotoLessThanOrEqualTo(String value) {
            addCriterion("elderPhoto <=", value, "elderphoto");
            return (Criteria) this;
        }

        public Criteria andElderphotoLike(String value) {
            addCriterion("elderPhoto like", value, "elderphoto");
            return (Criteria) this;
        }

        public Criteria andElderphotoNotLike(String value) {
            addCriterion("elderPhoto not like", value, "elderphoto");
            return (Criteria) this;
        }

        public Criteria andElderphotoIn(List<String> values) {
            addCriterion("elderPhoto in", values, "elderphoto");
            return (Criteria) this;
        }

        public Criteria andElderphotoNotIn(List<String> values) {
            addCriterion("elderPhoto not in", values, "elderphoto");
            return (Criteria) this;
        }

        public Criteria andElderphotoBetween(String value1, String value2) {
            addCriterion("elderPhoto between", value1, value2, "elderphoto");
            return (Criteria) this;
        }

        public Criteria andElderphotoNotBetween(String value1, String value2) {
            addCriterion("elderPhoto not between", value1, value2, "elderphoto");
            return (Criteria) this;
        }

        public Criteria andEldercompanyIsNull() {
            addCriterion("elderCompany is null");
            return (Criteria) this;
        }

        public Criteria andEldercompanyIsNotNull() {
            addCriterion("elderCompany is not null");
            return (Criteria) this;
        }

        public Criteria andEldercompanyEqualTo(String value) {
            addCriterion("elderCompany =", value, "eldercompany");
            return (Criteria) this;
        }

        public Criteria andEldercompanyNotEqualTo(String value) {
            addCriterion("elderCompany <>", value, "eldercompany");
            return (Criteria) this;
        }

        public Criteria andEldercompanyGreaterThan(String value) {
            addCriterion("elderCompany >", value, "eldercompany");
            return (Criteria) this;
        }

        public Criteria andEldercompanyGreaterThanOrEqualTo(String value) {
            addCriterion("elderCompany >=", value, "eldercompany");
            return (Criteria) this;
        }

        public Criteria andEldercompanyLessThan(String value) {
            addCriterion("elderCompany <", value, "eldercompany");
            return (Criteria) this;
        }

        public Criteria andEldercompanyLessThanOrEqualTo(String value) {
            addCriterion("elderCompany <=", value, "eldercompany");
            return (Criteria) this;
        }

        public Criteria andEldercompanyLike(String value) {
            addCriterion("elderCompany like", value, "eldercompany");
            return (Criteria) this;
        }

        public Criteria andEldercompanyNotLike(String value) {
            addCriterion("elderCompany not like", value, "eldercompany");
            return (Criteria) this;
        }

        public Criteria andEldercompanyIn(List<String> values) {
            addCriterion("elderCompany in", values, "eldercompany");
            return (Criteria) this;
        }

        public Criteria andEldercompanyNotIn(List<String> values) {
            addCriterion("elderCompany not in", values, "eldercompany");
            return (Criteria) this;
        }

        public Criteria andEldercompanyBetween(String value1, String value2) {
            addCriterion("elderCompany between", value1, value2, "eldercompany");
            return (Criteria) this;
        }

        public Criteria andEldercompanyNotBetween(String value1, String value2) {
            addCriterion("elderCompany not between", value1, value2, "eldercompany");
            return (Criteria) this;
        }

        public Criteria andElderphysicalstateIsNull() {
            addCriterion("elderPhysicalState is null");
            return (Criteria) this;
        }

        public Criteria andElderphysicalstateIsNotNull() {
            addCriterion("elderPhysicalState is not null");
            return (Criteria) this;
        }

        public Criteria andElderphysicalstateEqualTo(String value) {
            addCriterion("elderPhysicalState =", value, "elderphysicalstate");
            return (Criteria) this;
        }

        public Criteria andElderphysicalstateNotEqualTo(String value) {
            addCriterion("elderPhysicalState <>", value, "elderphysicalstate");
            return (Criteria) this;
        }

        public Criteria andElderphysicalstateGreaterThan(String value) {
            addCriterion("elderPhysicalState >", value, "elderphysicalstate");
            return (Criteria) this;
        }

        public Criteria andElderphysicalstateGreaterThanOrEqualTo(String value) {
            addCriterion("elderPhysicalState >=", value, "elderphysicalstate");
            return (Criteria) this;
        }

        public Criteria andElderphysicalstateLessThan(String value) {
            addCriterion("elderPhysicalState <", value, "elderphysicalstate");
            return (Criteria) this;
        }

        public Criteria andElderphysicalstateLessThanOrEqualTo(String value) {
            addCriterion("elderPhysicalState <=", value, "elderphysicalstate");
            return (Criteria) this;
        }

        public Criteria andElderphysicalstateLike(String value) {
            addCriterion("elderPhysicalState like", value, "elderphysicalstate");
            return (Criteria) this;
        }

        public Criteria andElderphysicalstateNotLike(String value) {
            addCriterion("elderPhysicalState not like", value, "elderphysicalstate");
            return (Criteria) this;
        }

        public Criteria andElderphysicalstateIn(List<String> values) {
            addCriterion("elderPhysicalState in", values, "elderphysicalstate");
            return (Criteria) this;
        }

        public Criteria andElderphysicalstateNotIn(List<String> values) {
            addCriterion("elderPhysicalState not in", values, "elderphysicalstate");
            return (Criteria) this;
        }

        public Criteria andElderphysicalstateBetween(String value1, String value2) {
            addCriterion("elderPhysicalState between", value1, value2, "elderphysicalstate");
            return (Criteria) this;
        }

        public Criteria andElderphysicalstateNotBetween(String value1, String value2) {
            addCriterion("elderPhysicalState not between", value1, value2, "elderphysicalstate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table elderinfo
     *
     * @mbggenerated do_not_delete_during_merge Fri Sep 14 20:40:09 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table elderinfo
     *
     * @mbggenerated Fri Sep 14 20:40:09 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}